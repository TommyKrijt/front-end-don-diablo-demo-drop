[{"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/index.js":"1","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/App.js":"2","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/reportWebVitals.js":"3","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/navBar/NavBar.js":"4","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/home/Home.js":"5","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/header/Header.js":"6","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/uploadPage/Upload.js":"7","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/button/Button.js":"8","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/profile/Profile.js":"9","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signIn/SignIn.js":"10","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/input/Input.js":"11","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signUp/SignUp.js":"12","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/dashboard/Dashboard.js":"13","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/ItemCard.js":"14","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/details/DetailPage.js":"15","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/userDashboard/UserDashboardPage.js":"16","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/UserItemCard.js":"17","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/context/AuthContext.js":"18","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/routes/PrivateRoute.js":"19"},{"size":723,"mtime":1614536973714,"results":"20","hashOfConfig":"21"},{"size":1565,"mtime":1614537149970,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611141139707,"results":"23","hashOfConfig":"21"},{"size":1211,"mtime":1614509306237,"results":"24","hashOfConfig":"21"},{"size":459,"mtime":1612870035676,"results":"25","hashOfConfig":"21"},{"size":488,"mtime":1614537149973,"results":"26","hashOfConfig":"21"},{"size":3890,"mtime":1614537802039,"results":"27","hashOfConfig":"21"},{"size":338,"mtime":1614289718057,"results":"28","hashOfConfig":"21"},{"size":2123,"mtime":1614536973724,"results":"29","hashOfConfig":"21"},{"size":2767,"mtime":1614537659049,"results":"30","hashOfConfig":"21"},{"size":699,"mtime":1614530649448,"results":"31","hashOfConfig":"21"},{"size":3374,"mtime":1614537802042,"results":"32","hashOfConfig":"21"},{"size":1856,"mtime":1614537659052,"results":"33","hashOfConfig":"21"},{"size":808,"mtime":1614537149962,"results":"34","hashOfConfig":"21"},{"size":4098,"mtime":1614537659055,"results":"35","hashOfConfig":"21"},{"size":1988,"mtime":1614537802045,"results":"36","hashOfConfig":"21"},{"size":813,"mtime":1614537149968,"results":"37","hashOfConfig":"21"},{"size":2839,"mtime":1614517984746,"results":"38","hashOfConfig":"21"},{"size":410,"mtime":1614537149974,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6z4mj0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/index.js",[],["88","89"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/App.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/reportWebVitals.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/navBar/NavBar.js",[],["90","91"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/home/Home.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/header/Header.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/uploadPage/Upload.js",["92","93","94"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport Button from \"../../components/button/Button\";\nimport Input from \"../../components/input/Input\";\nimport axios from \"axios\";\nimport {useAuthState} from \"../../context/AuthContext\";\n\nfunction Upload() {\n    const [formError, setFormError] = useState('');\n    const [protectedData, setProtectedData] = useState('');\n    const [uploadError, setUploadError] = useState('')\n    const [file, setFile] = useState('');\n    const [message, setMessage] = useState('');\n    const [formName, setFormName] = useState('');\n    const [formEmail, setFormEmail] = useState('');\n    const [uploadProgress, setUploadProgress] = useState('')\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setFormError('');\n            try {\n\n                const token = localStorage.getItem('token');\n\n                const response = await axios.get('http://localhost:8080/api/user', {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n                setProtectedData(response.data);\n            } catch(e) {\n                setFormError('Er is iets misgegaan bij het ophalen van de data')\n            }\n        }\n\n        getProtectedData();\n    }, []);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const token = localStorage.getItem('token');\n\n            const formData = new FormData()\n            formData.append(\"name\", formName,);\n            formData.append(\"email\", formEmail)\n            formData.append(\"file\", file, file.name);\n            formData.append(\"message\", message)\n\n            await axios.post('http://localhost:8080/api/files/uploads/', formData, {\n                onUploadProgress: progressEvent => {\n                    setUploadProgress(\"Upload Progress: \" + Math.round(progressEvent.loaded / progressEvent.total) * 100 + \"%\");},\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                    Authorization: `Bearer ${token}`,\n            }});\n        } catch (e) {\n            setUploadError(\"Something went wrong while uploading, please try again.\")\n        }\n    }\n\n    return (\n        <>\n            <div className=\"page-container\">\n                <div className=\"upload-form-container\">\n                    <form className=\"upload-form\"\n                          onSubmit={handleSubmit}>\n                        {formError && <p className=\"message-error\">{formError}</p>}\n                        {uploadError && <p className=\"message-error\">{uploadError}</p>}\n                        <p>Hi {protectedData.username}!</p>\n                        <p>Start uploading by selecting a file below!</p>\n                        <p>We will send a confirmation to {protectedData.email}</p>\n                        {/*<Input type=\"text\"*/}\n                        {/*       value={formName}*/}\n                        {/*       onChange={(e) => setFormName(e.target.value)}>name</Input>*/}\n                        {/*<Input type=\"email\"*/}\n                        {/*       value={formEmail}*/}\n                        {/*       onChange={(e) => setFormEmail(e.target.value)}>email</Input>*/}\n                        <Input type=\"file\"\n                               onChange={(e) => setFile(e.target.files[0])}\n                               accept=\".mp3\">\n                            file\n                        </Input>\n                        <div className=\"form-item\">\n                            <label className=\"form-title\">comment</label>\n                            <textarea className=\"form-input-comment\"\n                                      name=\"comment\"\n                                      rows=\"6\"\n                                      value={message}\n                                      required\n                                      onChange={(e) => setMessage(e.target.value)}\n                            />\n                        </div>\n                        {uploadProgress && <p>{uploadProgress}</p>}\n                        <Button className=\"form-button\">submit</Button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Upload;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/button/Button.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/profile/Profile.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signIn/SignIn.js",["95","96","97"],"import React, {useContext, useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport Button from \"../../components/button/Button\";\nimport Input from \"../../components/input/Input\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {AuthContext, useAuthState} from \"../../context/AuthContext\";\nimport axios from \"axios\";\n\nfunction SignIn() {\n\n    // context-functies\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated } = useAuthState();\n\n    // state voor invoervelden (omdat het formulier met Controlled Components werkt!)\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    // state voor gebruikersfeedback\n    const [loading, toggleLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            history.push('/');\n        }\n    }, [isAuthenticated]);\n\n    async function onSubmit(event) {\n        toggleLoading(true);\n        setError('');\n        event.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\n                username: username,\n                password: password,\n            })\n            login(response.data);\n        } catch(e) {\n            console.error(e);\n            setError('Inloggen is mislukt');\n        }\n        toggleLoading(false);\n    }\n\n    return (\n        <>\n            <div className=\"page-container\">\n                <div className=\"sign-in-form-container\">\n                    <form className=\"sign-in-form\"\n                          onSubmit={onSubmit}>\n                        <h1 className=\"sign-in-title\">sign in</h1>\n                        <div className=\"sign-in-form-items\">\n                            <Input id=\"username-field\"\n                                   type=\"text\"\n                                   value={username}\n                                   onChange={(e) => setUsername(e.target.value)}>\n                                username\n                            </Input>\n                            <Input id=\"password-field\"\n                                   type=\"password\"\n                                   value={password}\n                                   onChange={(e) => setPassword(e.target.value)} >\n                                password\n                            </Input>\n                            <Button className=\"sign-in-button\"\n                                    type=\"submit\">sign in</Button>\n                            <p className=\"sign-up-link\">Don't have an account?</p>\n                            <Link className=\"sign-up-link\" to=\"/sign-up\"><strong> Create an account here.</strong></Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/input/Input.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signUp/SignUp.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/dashboard/Dashboard.js",["98"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport ItemCard from \"../../components/itemCard/ItemCard\";\nimport axios from \"axios\";\n\nfunction Dashboard() {\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/files/uploads/all`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    return (\n        <>\n            <div className=\"dashboard-page-container\">\n                {uploads.length > 0 ?\n                <>\n                    <div className=\"page-card-container\">\n                        {uploads.map((upload)=>{\n                            return <ItemCard title={upload.demo}\n                                             message={upload.message}\n                                             key={upload.id}\n                                             name={upload.name}\n                                             children=\"open\"\n                                             link={`/api/files/uploads/${upload.id}`}/>\n                        })}\n                    </div>\n                </> :\n                    <p className=\"no-uploads-yet\">There are no uploads yet. Please come back later and start reviewing!</p>}\n            </div>\n        </>\n    );\n}\n\nexport default Dashboard;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/ItemCard.js",["99"],"import React from \"react\";\nimport \"./styles.css\"\nimport Button from \"../button/Button\";\n\nfunction ItemCard({ children, title, message,link, name}) {\n    return (\n        <>\n            <div className=\"item-card-container\">\n                <div className=\"item-card-title-container\">\n                    <h1 className=\"item-card-title\">{title}</h1>\n                </div>\n                <div className=\"uploaded-by\">\n                    <p> Uploaded by: {name}</p>\n                </div>\n                <div className=\"message-container\">\n                    <p className=\"item-card-message\">{message}</p>\n                </div>\n                <div className=\"button-container\">\n                    <a className=\"link-to-details\" href={link}>{children}</a>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ItemCard;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/details/DetailPage.js",["100","101","102","103"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport axios from \"axios\";\nimport {useParams} from \"react-router\";\nimport Button from \"../../components/button/Button\";\nimport {useAuthState} from \"../../context/AuthContext\";\n\nfunction DetailPage() {\n    const {id} = useParams();\n    const [error, setError] = useState('');\n    const [upload, setUpload] = useState([]);\n    const {isAdmin} = useAuthState();\n    const [protectedData, setProtectedData] = useState([])\n    const [feedback, setFeedback] = useState('');\n\n    useEffect(() => {\n        getUpload();\n    }, [])\n\n    async function getUpload() {\n        setError('');\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/files/uploads/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setUpload(response.data);\n            console.log(response)\n        } catch (e) {\n            setError(\"Something went wrong\")\n        }\n    }\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n\n                const response = await axios.get('http://localhost:8080/api/user', {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n                setProtectedData(response.data);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const token = localStorage.getItem('token');\n\n            const formData = new FormData()\n            formData.append(\"feedback\", feedback);\n\n            await axios.put(`http://localhost:8080/api/files/uploads/${id}`, formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                    Authorization: `Bearer ${token}`,\n                }});\n        } catch (e) {\n            setError(\"Something went wrong while uploading feedback, please try again.\")\n        }\n    }\n\n    return (\n        <>\n            <div className=\"detail-page-container\">\n                <div className=\"details\">\n                    <div className=\"details-title\">\n                        <h1>{upload.demo}</h1>\n                    </div>\n                    <div className=\"details-upload-by\">\n                        <p>Uploaded by: {upload.name}</p>\n                    </div>\n                    <div className=\"details-description\">\n                        <p className=\"details-description-message\">\n                            {upload.message}\n                        </p>\n                    </div>\n                    <audio controls src={upload.downloadUrl} type=\"audio/mpeg\">\n                    </audio>\n                    <p><a href={upload.downloadUrl}>Download!</a></p>\n                        <form className=\"details-feedback-container\" onSubmit={handleSubmit}>\n                            <label className=\"details-feedback-title\">Feedback</label>\n                            <textarea className=\"details-feedback-comment\"\n                                      name=\"feedback\"\n                                      rows=\"6\"\n                                      maxLength=\"250\"\n                                      value={feedback}\n                                      onChange={(e) => setFeedback(e.target.value)}\n                            />\n                            <Button type='submit'>Give Feedback</Button>\n                        </form>\n                </div>\n                <div className=\"show-feedback\">\n                    <p>Feedback:</p>\n                    <p>{upload.feedback}</p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default DetailPage;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/userDashboard/UserDashboardPage.js",["104","105"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport axios from \"axios\";\nimport UserItemCard from \"../../components/itemCard/UserItemCard\";\n\nfunction UserDashboardPage() {\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/files/uploads/`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    return (\n        <>\n            <div className=\"dashboard-page-container\">\n                {uploads.length > 0 ?\n                    <>\n                        <div className=\"page-card-container\">\n                            {uploads.map((upload)=>{\n                                return <UserItemCard title={upload.demo}\n                                                 message={upload.message}\n                                                 key={upload.id}\n                                                 name={upload.name}\n                                                 children=\"open\"\n                                                 link={`/api/files/uploads/${upload.id}`}\n                                                     feedback={upload.feedback}/>\n                            })}\n                        </div>\n                    </> :\n                    <p className=\"no-uploads-yet\">You have no uploads yet. Please start uploading!</p>}\n            </div>\n        </>\n    );\n}\n\nexport default UserDashboardPage;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/UserItemCard.js",["106"],"import React from \"react\";\nimport \"./styles.css\"\n\nfunction ItemCard({ title, message,feedback, name}) {\n    return (\n        <>\n            <div className=\"item-card-container\">\n                <div className=\"item-card-title-container\">\n                    <h1 className=\"item-card-title\">{title}</h1>\n                </div>\n                <div className=\"uploaded-by\">\n                    <p> Uploaded by: {name}</p>\n                </div>\n                <div className=\"message-container\">\n                    <p className=\"item-card-message\">Message: {message}</p>\n                </div>\n                <div className=\"message-container\">\n                    <p className=\"item-card-feedback\">Feedback: {feedback}</p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ItemCard;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/context/AuthContext.js",["107"],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    })\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        async function getUserInfo() {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/users/`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n\n                setAuthState({\n                    ...authState,\n                    user: {\n                        id: response.id,\n                        username: response.username,\n                        email: response.email,\n                    },\n                    status: 'done',\n                });\n\n                console.log(token)\n\n            } catch (e) {\n                setAuthState({\n                    ...authState,\n                    user: null,\n                    error: e,\n                    status: 'done'\n                });\n            }\n        }\n\n        if (authState.user === null && token) {\n            getUserInfo();\n        } else {\n            setAuthState({\n                ...authState,\n                error: null,\n                user: null,\n                status: 'done'\n            });\n        }\n    }, []);\n\n    function login(data) {\n        localStorage.setItem('token', data.accessToken);\n        setAuthState({\n            ...authState,\n            user: {\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n                id: data.id,\n                isAdmin: data.roles.includes(\"ROLE_ADMIN\"),\n            }\n        })\n    }\n\n    function logout() {\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n    }\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout}}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n    const isAdmin = authState.user !== null && authState.user.isAdmin;\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n        isAdmin: isAdmin,\n    }\n}\n\nexport {\n    AuthContext,\n    useAuthState,\n    AuthContextProvider,\n}","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/routes/PrivateRoute.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":6,"column":9,"nodeType":"116","messageId":"117","endLine":6,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":14,"column":22,"nodeType":"116","messageId":"117","endLine":14,"endColumn":33},{"ruleId":"114","severity":1,"message":"119","line":15,"column":23,"nodeType":"116","messageId":"117","endLine":15,"endColumn":35},{"ruleId":"114","severity":1,"message":"120","line":20,"column":12,"nodeType":"116","messageId":"117","endLine":20,"endColumn":19},{"ruleId":"114","severity":1,"message":"121","line":21,"column":12,"nodeType":"116","messageId":"117","endLine":21,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":29,"column":8,"nodeType":"124","endLine":29,"endColumn":25,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"121","line":8,"column":12,"nodeType":"116","messageId":"117","endLine":8,"endColumn":17},{"ruleId":"114","severity":1,"message":"126","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"121","line":10,"column":12,"nodeType":"116","messageId":"117","endLine":10,"endColumn":17},{"ruleId":"114","severity":1,"message":"127","line":12,"column":12,"nodeType":"116","messageId":"117","endLine":12,"endColumn":19},{"ruleId":"114","severity":1,"message":"128","line":13,"column":12,"nodeType":"116","messageId":"117","endLine":13,"endColumn":25},{"ruleId":"122","severity":1,"message":"129","line":18,"column":8,"nodeType":"124","endLine":18,"endColumn":10,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"131","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":16},{"ruleId":"114","severity":1,"message":"121","line":9,"column":12,"nodeType":"116","messageId":"117","endLine":9,"endColumn":17},{"ruleId":"114","severity":1,"message":"126","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"132","line":59,"column":8,"nodeType":"124","endLine":59,"endColumn":10,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'useAuthState' is defined but never used.","Identifier","unusedVar","'setFormName' is assigned a value but never used.","'setFormEmail' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'Button' is defined but never used.","'isAdmin' is assigned a value but never used.","'protectedData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUpload'. Either include it or remove the dependency array.",["137"],"'ItemCard' is defined but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"145","text":"146"},"Update the dependencies array to be: [getUpload]",{"range":"147","text":"148"},"Update the dependencies array to be: [authState]",{"range":"149","text":"150"},[955,972],"[history, isAuthenticated]",[602,604],"[getUpload]",[1621,1623],"[authState]"]