[{"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/index.js":"1","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/App.js":"2","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/reportWebVitals.js":"3","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/navBar/NavBar.js":"4","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/home/Home.js":"5","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/header/Header.js":"6","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/footer/Footer.js":"7","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/uploadPage/Upload.js":"8","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/button/Button.js":"9","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/profile/Profile.js":"10","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signIn/SignIn.js":"11","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/input/Input.js":"12","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signUp/SignUp.js":"13","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/dashboard/Dashboard.js":"14","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/context/AuthContext.js":"15","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/privateRoute/PrivateRoute.js":"16","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/ItemCard.js":"17","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/details/DetailPage.js":"18"},{"size":736,"mtime":1612459261642,"results":"19","hashOfConfig":"20"},{"size":1393,"mtime":1614260489841,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611141139707,"results":"22","hashOfConfig":"20"},{"size":1029,"mtime":1613482952228,"results":"23","hashOfConfig":"20"},{"size":459,"mtime":1612870035676,"results":"24","hashOfConfig":"20"},{"size":491,"mtime":1614107588468,"results":"25","hashOfConfig":"20"},{"size":352,"mtime":1611761277776,"results":"26","hashOfConfig":"20"},{"size":4319,"mtime":1614254833897,"results":"27","hashOfConfig":"20"},{"size":300,"mtime":1613486019613,"results":"28","hashOfConfig":"20"},{"size":2227,"mtime":1614257890200,"results":"29","hashOfConfig":"20"},{"size":2597,"mtime":1613834568188,"results":"30","hashOfConfig":"20"},{"size":670,"mtime":1614243501196,"results":"31","hashOfConfig":"20"},{"size":3454,"mtime":1613485763368,"results":"32","hashOfConfig":"20"},{"size":1714,"mtime":1614262352604,"results":"33","hashOfConfig":"20"},{"size":2956,"mtime":1614256113774,"results":"34","hashOfConfig":"20"},{"size":408,"mtime":1613555268543,"results":"35","hashOfConfig":"20"},{"size":895,"mtime":1614259821562,"results":"36","hashOfConfig":"20"},{"size":2361,"mtime":1614266771585,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6z4mj0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/index.js",[],["81","82"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/App.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/reportWebVitals.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/navBar/NavBar.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/home/Home.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/header/Header.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/footer/Footer.js",[],["83","84"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/uploadPage/Upload.js",["85"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport Button from \"../../components/button/Button\";\nimport Input from \"../../components/input/Input\";\nimport axios from \"axios\";\nimport {useAuthState} from \"../../components/context/AuthContext\";\n\nfunction Upload() {\n    const {user} = useAuthState()\n\n    const [formError, setFormError] = useState('');\n    const [protectedData, setProtectedData] = useState('');\n    const [uploadError, setUploadError] = useState('')\n    const [file, setFile] = useState('');\n    const [message, setMessage] = useState('');\n    const [formName, setFormName] = useState('');\n    const [formEmail, setFormEmail] = useState('');\n\n\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setFormError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/users/`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n                setProtectedData(response.data[0]);\n                console.log(response);\n            } catch(e) {\n                setFormError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const token = localStorage.getItem('token');\n            const formData = new FormData()\n            formData.append(\"name\", formName,);\n            formData.append(\"email\", formEmail)\n            formData.append(\"file\", file, file.name);\n            formData.append(\"message\", message)\n\n            await axios.post('http://localhost:8080/api/files/uploads/', formData, {\n                onUploadProgress: progressEvent => {\n                    console.log(\"Upload Progress:\" + Math.round(progressEvent.loaded / progressEvent.total) * 100);},\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                    Authorization: `Bearer ${token}`,\n            }});\n        } catch (e) {\n            setUploadError(\"Something went wrong while uploading, please try again.\")\n        }\n    }\n    return (\n        <>\n            <div className=\"page-container\">\n                <div className=\"upload-form-container\">\n                    <form className=\"upload-form\"\n                          onSubmit={handleSubmit}>\n                        {formError && <p className=\"message-error\">{formError}</p>}\n                        {uploadError && <p className=\"message-error\">{uploadError}</p>}\n                        <p>Hi {protectedData.username}!</p>\n                        <p>Start uploading by selecting a file below!</p>\n                        <Input type=\"text\"\n                               value={formName}\n                               onChange={(e) => setFormName(e.target.value)}>name</Input>\n                        <Input type=\"email\"\n                               value={formEmail}\n                               onChange={(e) => setFormEmail(e.target.value)}>email</Input>\n                        {/*<Input type=\"text\"*/}\n                        {/*       value={formSong}*/}\n                        {/*       onChange={(e) => setFormSong(e.target.value)} >song</Input>*/}\n                        <Input type=\"file\"\n                               onChange={(e) => setFile(e.target.files[0])}\n                               accept=\".mp3\">\n                            file\n                        </Input>\n                        <div className=\"form-item\">\n                            <label className=\"form-title\">comment</label>\n                            <textarea className=\"form-input-comment\"\n                                      name=\"comment\"\n                                      rows=\"6\"\n                                      value={message}\n                                      onChange={(e) => setMessage(e.target.value)}\n                            />\n                        </div>\n                        <Button className=\"form-button\">submit</Button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Upload;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/button/Button.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/profile/Profile.js",["86"],"import React, { useEffect, useState}from 'react';\nimport { useAuthState } from '../../components/context/AuthContext';\nimport \"./styles.css\"\nimport Button from \"../../components/button/Button\";\nimport axios from \"axios\";\nimport {useParams} from \"react-router\";\n\nfunction Profile() {\n    const { user, logout } = useAuthState();\n\n    const [error, setError] = useState('');\n    const [protectedData, setProtectedData] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/users/`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                });\n                setProtectedData(response.data[0]);\n                console.log(response);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    return (\n        <>\n            <div className=\"page-container\">\n                <div className=\"page-content\">\n                    <h1 className=\"profile-title\">profile</h1>\n                    {protectedData &&\n                    <>\n                        <div className=\"profile-information\">\n                            <p className=\"profile-information-title\">username</p>\n                            <p className=\"profile-information-user\">{protectedData.username}</p>\n                            <p className=\"profile-information-title\">email</p>\n                            <p className=\"profile-information-user\">{protectedData.email}</p>\n                        </div>\n                        <Button onClick={() => logout()}>logout</Button>\n                    </>}\n                    {error && <p className=\"message-error\">{error}</p>}\n                    {!user &&\n                    <p>Please <a href=\"/sign-in\"><strong>sign in</strong></a>to view this page!</p>\n                    }\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Profile;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signIn/SignIn.js",["87"],"import React, {useContext, useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport Button from \"../../components/button/Button\";\nimport Input from \"../../components/input/Input\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {AuthContext, useAuthState} from \"../../components/context/AuthContext\";\nimport axios from \"axios\";\n\n\n\nfunction SignIn() {\n\n    const { login } = useContext(AuthContext);\n    const { isAuthenticated } = useAuthState();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        if (isAuthenticated === true) {\n            history.push('/');\n        }\n    }, [isAuthenticated]);\n\n    async function onSubmit(event) {\n        event.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/api/auth/signin', {\n                username: username,\n                password: password,\n            })\n            login(response.data);\n            console.log(response.data);\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"page-container\">\n                <div className=\"sign-in-form-container\">\n                    <form className=\"sign-in-form\"\n                          onSubmit={onSubmit}>\n                        <h1 className=\"sign-in-title\">sign in</h1>\n                        <div className=\"sign-in-form-items\">\n                            <Input id=\"username-field\"\n                                   type=\"text\"\n                                   value={username}\n                                   onChange={(e) => setUsername(e.target.value)}>\n                                username\n                            </Input>\n                            <Input id=\"password-field\"\n                                   type=\"password\"\n                                   value={password}\n                                   onChange={(e) => setPassword(e.target.value)} >\n                                password\n                            </Input>\n                            <Button className=\"sign-in-button\"\n                                    type=\"submit\">sign in</Button>\n                            <p className=\"sign-up-link\">Don't have an account?</p>\n                            <Link className=\"sign-up-link\" to=\"/sign-up\"><strong> Create an account here.</strong></Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SignIn;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/input/Input.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signUp/SignUp.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/dashboard/Dashboard.js",["88"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport ItemCard from \"../../components/itemCard/ItemCard\";\nimport axios from \"axios\";\n\n\nfunction Dashboard() {\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/files/uploads/`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n                console.log(response.data);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n    return (\n        <>\n            <div className=\"dashboard-page-container\">\n                <div className=\"page-card-container\">\n                    {uploads.map((upload)=>{\n                        return <ItemCard title={upload.demo}\n                                         message={upload.message}\n                                         key={upload.id}\n                                         name={upload.name}\n                                         children=\"open\"\n                                         download=\"download\"\n                                         link={`/api/files/uploads/${upload.id}`}/>\n                    })}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Dashboard;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/context/AuthContext.js",["89"],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n    const [admin, setAdmin] = useState(false);\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    })\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        async function getUserInfo() {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/users/`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n\n                setAuthState({\n                    ...authState,\n                    user: {\n                        id: response.id,\n                        username: response.username,\n                        email: response.email,\n                    },\n                    status: 'done',\n                });\n\n            } catch (e) {\n                setAuthState({\n                    ...authState,\n                    user: null,\n                    error: e,\n                    status: 'done'\n                });\n            }\n        }\n\n        if (authState.user === null && token) {\n            getUserInfo();\n        } else {\n            setAuthState({\n                ...authState,\n                error: null,\n                user: null,\n                status: 'done'\n            });\n        }\n    }, []);\n\n    function login(data) {\n        localStorage.setItem('token', data.accessToken);\n        setAuthState({\n            ...authState,\n            user: {\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n            }\n        })\n        isAdmin(data.roles);\n    }\n\n    function isAdmin(data) {\n        if (data.roles[0].includes(\"ROLE_ADMIN\")) {\n            setAdmin(true);\n        } else {\n            setAdmin(false);\n        }\n    }\n\n    function logout() {\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n        setAdmin(false);\n    }\n\n    function getAdmin() {\n        return admin;\n    }\n\n\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout, getAdmin}}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n    }\n}\n\nexport {\n    AuthContext,\n    useAuthState,\n    AuthContextProvider,\n}","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/privateRoute/PrivateRoute.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/ItemCard.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/details/DetailPage.js",["90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":12,"nodeType":"101","messageId":"102","endLine":9,"endColumn":16},{"ruleId":"99","severity":1,"message":"103","line":6,"column":9,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":23,"column":8,"nodeType":"106","endLine":23,"endColumn":25,"suggestions":"107"},{"ruleId":"99","severity":1,"message":"108","line":9,"column":12,"nodeType":"101","messageId":"102","endLine":9,"endColumn":17},{"ruleId":"104","severity":1,"message":"109","line":57,"column":8,"nodeType":"106","endLine":57,"endColumn":10,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"108","line":10,"column":12,"nodeType":"101","messageId":"102","endLine":10,"endColumn":17},{"ruleId":"99","severity":1,"message":"111","line":12,"column":12,"nodeType":"101","messageId":"102","endLine":12,"endColumn":19},{"ruleId":"104","severity":1,"message":"112","line":16,"column":8,"nodeType":"106","endLine":16,"endColumn":10,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["117"],"'isAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUpload'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"125","text":"126"},"Update the dependencies array to be: [authState]",{"range":"127","text":"128"},"Update the dependencies array to be: [getUpload]",{"range":"129","text":"130"},[709,726],"[history, isAuthenticated]",[1631,1633],"[authState]",[493,495],"[getUpload]"]