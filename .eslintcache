[{"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/index.js":"1","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/App.js":"2","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/reportWebVitals.js":"3","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/navBar/NavBar.js":"4","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/home/Home.js":"5","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/header/Header.js":"6","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/footer/Footer.js":"7","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/uploadPage/Upload.js":"8","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/button/Button.js":"9","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/profile/Profile.js":"10","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signIn/SignIn.js":"11","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/input/Input.js":"12","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signUp/SignUp.js":"13","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/dashboard/Dashboard.js":"14","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/context/AuthContext.js":"15","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/ItemCard.js":"16","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/details/DetailPage.js":"17","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/routes/PrivateRoute.js":"18","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/routes/AdminPrivateRoute.js":"19","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/userDashboard/UserDashboardPage.js":"20","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/UserItemCard.js":"21"},{"size":734,"mtime":1614521264853,"results":"22","hashOfConfig":"23"},{"size":1576,"mtime":1614521264851,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611141139707,"results":"25","hashOfConfig":"23"},{"size":1211,"mtime":1614509306237,"results":"26","hashOfConfig":"23"},{"size":459,"mtime":1612870035676,"results":"27","hashOfConfig":"23"},{"size":491,"mtime":1614107588468,"results":"28","hashOfConfig":"23"},{"size":352,"mtime":1611761277776,"results":"29","hashOfConfig":"23"},{"size":4470,"mtime":1614522387749,"results":"30","hashOfConfig":"23"},{"size":338,"mtime":1614289718057,"results":"31","hashOfConfig":"23"},{"size":2134,"mtime":1614522363150,"results":"32","hashOfConfig":"23"},{"size":2936,"mtime":1614522363142,"results":"33","hashOfConfig":"23"},{"size":670,"mtime":1614243501196,"results":"34","hashOfConfig":"23"},{"size":3930,"mtime":1614521264848,"results":"35","hashOfConfig":"23"},{"size":1941,"mtime":1614508884191,"results":"36","hashOfConfig":"23"},{"size":2839,"mtime":1614517984746,"results":"37","hashOfConfig":"23"},{"size":847,"mtime":1614291192764,"results":"38","hashOfConfig":"23"},{"size":2563,"mtime":1614515867765,"results":"39","hashOfConfig":"23"},{"size":410,"mtime":1614521410330,"results":"40","hashOfConfig":"23"},{"size":431,"mtime":1614281660562,"results":"41","hashOfConfig":"23"},{"size":2011,"mtime":1614509607680,"results":"42","hashOfConfig":"23"},{"size":695,"mtime":1614509583289,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6z4mj0",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/index.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/App.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/reportWebVitals.js",[],["95","96"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/navBar/NavBar.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/home/Home.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/header/Header.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/footer/Footer.js",[],["97","98"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/uploadPage/Upload.js",["99"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/button/Button.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/profile/Profile.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signIn/SignIn.js",["100","101","102"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/input/Input.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/signUp/SignUp.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/dashboard/Dashboard.js",["103","104"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport ItemCard from \"../../components/itemCard/ItemCard\";\nimport axios from \"axios\";\nimport {useParams} from \"react-router\";\n\n\nfunction Dashboard() {\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/files/uploads/all`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n                console.log(response.data);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    return (\n        <>\n            <div className=\"dashboard-page-container\">\n                {uploads.length > 0 ?\n                <>\n                    <div className=\"page-card-container\">\n                        {uploads.map((upload)=>{\n                            return <ItemCard title={upload.demo}\n                                             message={upload.message}\n                                             key={upload.id}\n                                             name={upload.name}\n                                             children=\"open\"\n                                             link={`/api/files/uploads/${upload.id}`}/>\n                        })}\n                    </div>\n                </> :\n                    <p className=\"no-uploads-yet\">There are no uploads yet. Please come back later and start reviewing!</p>}\n            </div>\n        </>\n    );\n}\n\nexport default Dashboard;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/context/AuthContext.js",["105"],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nconst AuthContext = createContext({});\n\nfunction AuthContextProvider({ children }) {\n\n    const [authState, setAuthState] = useState({\n        status: 'pending',\n        error: null,\n        user: null,\n    })\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        async function getUserInfo() {\n            try {\n                const response = await axios.get(`http://localhost:8080/api/users/`, {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n\n                setAuthState({\n                    ...authState,\n                    user: {\n                        id: response.id,\n                        username: response.username,\n                        email: response.email,\n                    },\n                    status: 'done',\n                });\n\n                console.log(token)\n\n            } catch (e) {\n                setAuthState({\n                    ...authState,\n                    user: null,\n                    error: e,\n                    status: 'done'\n                });\n            }\n        }\n\n        if (authState.user === null && token) {\n            getUserInfo();\n        } else {\n            setAuthState({\n                ...authState,\n                error: null,\n                user: null,\n                status: 'done'\n            });\n        }\n    }, []);\n\n    function login(data) {\n        localStorage.setItem('token', data.accessToken);\n        setAuthState({\n            ...authState,\n            user: {\n                username: data.username,\n                email: data.email,\n                roles: data.roles,\n                id: data.id,\n                isAdmin: data.roles.includes(\"ROLE_ADMIN\"),\n            }\n        })\n    }\n\n    function logout() {\n        localStorage.clear();\n        setAuthState({\n            ...authState,\n            user: null,\n        })\n    }\n    return (\n        <AuthContext.Provider value={{ ...authState, login, logout}}>\n            {authState.status === 'done' && children}\n            {authState.status === 'pending' && <p>Loading...</p>}\n        </AuthContext.Provider>\n    );\n}\n\nfunction useAuthState() {\n    const authState = useContext(AuthContext);\n    const isDone = authState.status === 'done';\n    const isAuthenticated = authState.user !== null && isDone;\n    const isAdmin = authState.user !== null && authState.user.isAdmin;\n\n    return {\n        ...authState,\n        isAuthenticated: isAuthenticated,\n        isAdmin: isAdmin,\n    }\n}\n\nexport {\n    AuthContext,\n    useAuthState,\n    AuthContextProvider,\n}","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/ItemCard.js",["106"],"import React from \"react\";\nimport \"./styles.css\"\nimport Button from \"../button/Button\";\n\nfunction ItemCard({ children, title, message,link, name}) {\n    return (\n        <>\n            <div className=\"item-card-container\">\n                <div className=\"item-card-title-container\">\n                    <h1 className=\"item-card-title\">{title}</h1>\n                </div>\n                <div className=\"uploaded-by\">\n                    <p> Uploaded by: {name}</p>\n                </div>\n                <div className=\"message-container\">\n                    <p className=\"item-card-message\">{message}</p>\n                </div>\n                <div className=\"button-container\">\n                    <a className=\"link-to-details\" href={link}>{children}</a>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ItemCard;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/details/DetailPage.js",["107","108","109"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport axios from \"axios\";\nimport {useParams} from \"react-router\";\nimport Button from \"../../components/button/Button\";\nimport {useAuthState} from \"../../components/context/AuthContext\";\n\nfunction DetailPage() {\n    const {id} = useParams();\n    const [error, setError] = useState('');\n    const [upload, setUpload] = useState([]);\n    const {isAdmin} = useAuthState();\n\n    useEffect(() => {\n        getUpload();\n    }, [])\n\n    async function getUpload() {\n        setError('');\n        try {\n            const token = localStorage.getItem('token');\n            const response = await axios.get(`http://localhost:8080/api/files/uploads/${id}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                }\n            });\n            setUpload(response.data);\n            console.log(response)\n        } catch (e) {\n            setError(\"Something went wrong\")\n        }\n    }\n    console.log(upload);\n\n    return (\n        <>\n            <div className=\"detail-page-container\">\n                <div className=\"details\">\n                    <div className=\"details-title\">\n                        <h1>{upload.demo}</h1>\n                    </div>\n                    <div className=\"details-upload-by\">\n                        <p>Uploaded by: {upload.name}</p>\n                    </div>\n                    <div className=\"details-description\">\n                        <p className=\"details-description-message\">\n                            {upload.message}\n                        </p>\n                    </div>\n                    <audio controls src={upload.downloadUrl} type=\"audio/mpeg\">\n                    </audio>\n                    <p><a href={upload.downloadUrl}>Download!</a></p>\n                    <div className=\"details-feedback-buttons\">\n                        <Button>Feedback 1</Button>\n                        <Button>Feedback 2</Button>\n                    </div>\n                    <div className=\"details-feedback-container\">\n                        <label className=\"details-feedback-title\">Feedback</label>\n                        <textarea className=\"details-feedback-comment\"\n                                  name=\"feedback\"\n                                  rows=\"6\"\n                                  maxLength=\"250\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default DetailPage;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/routes/PrivateRoute.js",[],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/routes/AdminPrivateRoute.js",[],["110","111"],"/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/pages/userDashboard/UserDashboardPage.js",["112","113"],"import React, {useEffect, useState} from \"react\";\nimport \"./styles.css\"\nimport ItemCard from \"../../components/itemCard/ItemCard\";\nimport axios from \"axios\";\nimport UserItemCard from \"../../components/itemCard/UserItemCard\";\n\nfunction UserDashboardPage() {\n    const [uploads, setUploads] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        async function getProtectedData() {\n            setError('');\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get(`http://localhost:8080/api/files/uploads/`, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                setUploads(response.data);\n                console.log(response.data);\n            } catch(e) {\n                setError('Something went wrong while fetching data')\n            }\n        }\n        getProtectedData();\n    }, []);\n\n    return (\n        <>\n            <div className=\"dashboard-page-container\">\n                {uploads.length > 0 ?\n                    <>\n                        <div className=\"page-card-container\">\n                            {uploads.map((upload)=>{\n                                return <UserItemCard title={upload.demo}\n                                                 message={upload.message}\n                                                 key={upload.id}\n                                                 name={upload.name}\n                                                 children=\"open\"\n                                                 link={`/api/files/uploads/${upload.id}`}/>\n                            })}\n                        </div>\n                    </> :\n                    <p className=\"no-uploads-yet\">You have no uploads yet. Please start uploading!</p>}\n            </div>\n        </>\n    );\n}\n\nexport default UserDashboardPage;","/Users/Tommy/WebstormProjects/front-end-don-diablo-demo-drop/src/components/itemCard/UserItemCard.js",["114"],"import React from \"react\";\nimport \"./styles.css\"\nimport Button from \"../button/Button\";\n\nfunction ItemCard({ children, title, message,link, name}) {\n    return (\n        <>\n            <div className=\"item-card-container\">\n                <div className=\"item-card-title-container\">\n                    <h1 className=\"item-card-title\">{title}</h1>\n                </div>\n                <div className=\"uploaded-by\">\n                    <p> Uploaded by: {name}</p>\n                </div>\n                <div className=\"message-container\">\n                    <p className=\"item-card-message\">{message}</p>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ItemCard;",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":12,"nodeType":"123","messageId":"124","endLine":9,"endColumn":16},{"ruleId":"121","severity":1,"message":"125","line":20,"column":12,"nodeType":"123","messageId":"124","endLine":20,"endColumn":19},{"ruleId":"121","severity":1,"message":"126","line":21,"column":12,"nodeType":"123","messageId":"124","endLine":21,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":29,"column":8,"nodeType":"129","endLine":29,"endColumn":25,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"131","line":5,"column":9,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":10,"column":12,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"127","severity":1,"message":"132","line":59,"column":8,"nodeType":"129","endLine":59,"endColumn":10,"suggestions":"133"},{"ruleId":"121","severity":1,"message":"134","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"126","line":10,"column":12,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"121","severity":1,"message":"135","line":12,"column":12,"nodeType":"123","messageId":"124","endLine":12,"endColumn":19},{"ruleId":"127","severity":1,"message":"136","line":16,"column":8,"nodeType":"129","endLine":16,"endColumn":10,"suggestions":"137"},{"ruleId":"115","replacedBy":"138"},{"ruleId":"117","replacedBy":"139"},{"ruleId":"121","severity":1,"message":"140","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"126","line":9,"column":12,"nodeType":"123","messageId":"124","endLine":9,"endColumn":17},{"ruleId":"121","severity":1,"message":"134","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["144"],"'Button' is defined but never used.","'isAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUpload'. Either include it or remove the dependency array.",["145"],["141"],["142"],"'ItemCard' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"152","text":"153"},"Update the dependencies array to be: [authState]",{"range":"154","text":"155"},"Update the dependencies array to be: [getUpload]",{"range":"156","text":"157"},[962,979],"[history, isAuthenticated]",[1621,1623],"[authState]",[493,495],"[getUpload]"]